{"ast":null,"code":"import _defineProperty from\"/home/ubuntu/THREATcrawl/threatcrawl/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";import _objectSpread from\"/home/ubuntu/THREATcrawl/threatcrawl/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _classCallCheck from\"/home/ubuntu/THREATcrawl/threatcrawl/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _createClass from\"/home/ubuntu/THREATcrawl/threatcrawl/node_modules/@babel/runtime/helpers/esm/createClass.js\";import _assertThisInitialized from\"/home/ubuntu/THREATcrawl/threatcrawl/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";import _inherits from\"/home/ubuntu/THREATcrawl/threatcrawl/node_modules/@babel/runtime/helpers/esm/inherits.js\";import _createSuper from\"/home/ubuntu/THREATcrawl/threatcrawl/node_modules/@babel/runtime/helpers/esm/createSuper.js\";import*as React from'react';import{Component}from'react';import{InputAdornment,TextField,InputLabel,FormControl,Select,Tooltip,MenuItem,IconButton}from'@material-ui/core';import TimezoneSelector from'./components/TimezoneSelector';import{defaultValues}from'./DefaultValues';import{FaRegEye,FaRegEyeSlash,FaRegQuestionCircle}from'react-icons/fa';import\"../styles/start.css\";/**\n * InputConfiguration is a class for the tab input configuration. \n * In this tab, several values can be input as part of the configuration. \n * \n * torPath is the path on the machine to the tor browser folder\n * frontPageURL is the URL for front page of the platform that the user would like to crawl. \n * sectionPageURL is the URL for section page of the platform that the user would like to crawl.\n * subsectionPageURL is the URL for subsection page of the platform that the user would like to crawl. (optional)\n * threadPageURL is the URL for thread page of the platform that the user would like to crawl.\n * loginPageURL is the URL for login page of the platform that the user would like to crawl. \n * username is the value of the username that the crawler can use to log in into the platform. \n * password is the value of the password that the crawler can use to log in into the platform. \n * maxThreadAge is the maximum age of a thread that the crawler will use to look into the threads. NOT USED\n * maxThreadLength is the maximum length of a thread that the crawler will use to look into the threads. NOT USED\n * timezone is the value of the timezone used which the crawler crawls during the defined schedule. \n * linkFollowPolicy is the policy to be used when encountering links on the platform.\n * varStartTimeWorkday is the variance for the start time of a workday. \n * varEndTimeWorkday is the variance for the end time of a workday. \n * varStartTimeBreaks is the variance for the start time of a break. \n * varEndTimeBreaks is the variance for the end time of a break. \n */import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var InputConfiguration=/*#__PURE__*/function(_Component){_inherits(InputConfiguration,_Component);var _super=_createSuper(InputConfiguration);function InputConfiguration(props){var _this;_classCallCheck(this,InputConfiguration);_this=_super.call(this,props);// Set the initial state\n_this.state={configuration:{frontPageURL:\"\",sectionPageURL:\"\",subsectionPageURL:\"\",threadPageURL:\"\",loginPageURL:\"\",username:\"\",password:\"\",maxThreadAge:\"\",maxThreadLength:\"\",timezone:\"\",linkFollowPolicy:\"\",varStartTimeWorkday:\"\",varEndTimeWorkday:\"\",varStartTimeBreaks:\"\",varEndTimeBreaks:\"\",torPath:\"\",readingSpeedRangeLower:\"\",readingSpeedRangeUpper:\"\",maxInterruptionDuration:\"\",minInterruptionDuration:\"\",interruptionInterval:\"\",varInterruptionInterval:\"\"},passwordVisible:false};// Bind functions to this context\n_this.handleInputValues=_this.handleInputValues.bind(_assertThisInitialized(_this));_this.handleSavingConfiguration=_this.handleSavingConfiguration.bind(_assertThisInitialized(_this));_this.handleTimezone=_this.handleTimezone.bind(_assertThisInitialized(_this));return _this;}// Set the state to the configuration selected\n_createClass(InputConfiguration,[{key:\"componentDidMount\",value:function componentDidMount(){this.setState({configuration:this.props.configuration});}/**\n     * Handle input value changes \n     * \n     * @param {*} event is the event for the new value \n     * @param {*} element is the name of the input that has changed\n     */},{key:\"handleInputValues\",value:function handleInputValues(event,element){// get new value \nvar newValue=event.target.value;// If the value is larger than 0, change input according to what is typed \nif(newValue.length>=0){// Change the state of the element according to new value \nthis.setState(function(state){return{configuration:_objectSpread(_objectSpread({},state.configuration),{},_defineProperty({},element,newValue))};});}}// Toggle whether the password is visible\n},{key:\"togglePasswordVisibility\",value:function togglePasswordVisibility(){this.setState({passwordVisible:!this.state.passwordVisible});}// Handle selection of the timezone\n},{key:\"handleTimezone\",value:function handleTimezone(timezone){this.setState(function(state){return{configuration:_objectSpread(_objectSpread({},state.configuration),{},{timezone:timezone})};});}// Send current configuration to TabScreen to save\n},{key:\"handleSavingConfiguration\",value:function handleSavingConfiguration(){this.props.saveConfiguration(this.state.configuration);}},{key:\"render\",value:function render(){var _this2=this;// Define link follow policies\nvar linkFollowPolicyOptions=[\"all\",\"relevant\"];return/*#__PURE__*/_jsxs(\"div\",{className:\"ConfigurationTab\",children:[/*#__PURE__*/_jsx(TextField,{id:\"outlined-textarea\",label:\"Tor Browser path *\",placeholder:defaultValues.torPath,variant:\"outlined\",size:\"small\",value:this.state.configuration.torPath,onChange:function onChange(event){_this2.handleInputValues(event,'torPath');},onBlur:this.handleSavingConfiguration}),/*#__PURE__*/_jsx(TextField,{id:\"outlined-textarea\",label:\"URL log-in page *\",placeholder:defaultValues.exampleLoginURL,variant:\"outlined\",size:\"small\",value:this.state.configuration.loginPageURL,onChange:function onChange(event){_this2.handleInputValues(event,'loginPageURL');},onBlur:this.handleSavingConfiguration}),/*#__PURE__*/_jsx(TextField,{id:\"outlined-textarea\",label:\"URL front page *\",placeholder:defaultValues.exampleFrontPageURL,variant:\"outlined\",size:\"small\",value:this.state.configuration.frontPageURL,onChange:function onChange(event){_this2.handleInputValues(event,'frontPageURL');},onBlur:this.handleSavingConfiguration}),/*#__PURE__*/_jsx(TextField,{id:\"outlined-textarea\",label:\"URL section page *\",placeholder:defaultValues.exampleSectionURL,variant:\"outlined\",size:\"small\",value:this.state.configuration.sectionPageURL,onChange:function onChange(event){_this2.handleInputValues(event,'sectionPageURL');},onBlur:this.handleSavingConfiguration}),/*#__PURE__*/_jsx(TextField,{id:\"outlined-textarea\",label:\"URL subsection page\",placeholder:defaultValues.exampleSubsectionURL,variant:\"outlined\",size:\"small\",value:this.state.configuration.subsectionPageURL,onChange:function onChange(event){_this2.handleInputValues(event,'subsectionPageURL');},onBlur:this.handleSavingConfiguration}),/*#__PURE__*/_jsx(\"p\",{children:\"Please note: If the target website opens the last page of a thread when clicking on a thread title, provide a link for a thread at its second or third page, allowing to learn both the first page button and the next and previous page buttons.\"}),/*#__PURE__*/_jsx(TextField,{id:\"outlined-textarea\",label:\"URL thread page *\",placeholder:defaultValues.exampleThreadURL,variant:\"outlined\",size:\"small\",value:this.state.configuration.threadPageURL,onChange:function onChange(event){_this2.handleInputValues(event,'threadPageURL');},onBlur:this.handleSavingConfiguration}),/*#__PURE__*/_jsx(TextField,{id:\"outlined-textarea\",label:\"Username\",placeholder:defaultValues.username,variant:\"outlined\",size:\"small\",value:this.state.configuration.username,onChange:function onChange(event){_this2.handleInputValues(event,'username');},onBlur:this.handleSavingConfiguration}),/*#__PURE__*/_jsx(TextField,{id:\"outlined-textarea\",label:\"Password\",type:this.state.passwordVisible?\"text\":\"password\",placeholder:defaultValues.password,InputProps:{endAdornment:/*#__PURE__*/_jsx(InputAdornment,{position:\"end\",onClick:this.togglePasswordVisibility.bind(this),children:this.state.passwordVisible?/*#__PURE__*/_jsx(FaRegEyeSlash,{}):/*#__PURE__*/_jsx(FaRegEye,{})})},variant:\"outlined\",size:\"small\",value:this.state.configuration.password,onChange:function onChange(event){_this2.handleInputValues(event,'password');},onBlur:this.handleSavingConfiguration}),/*#__PURE__*/_jsx(TimezoneSelector,{timezone:this.state.configuration.timezone,onChange:this.handleTimezone,onBlur:this.handleSavingConfiguration}),/*#__PURE__*/_jsxs(FormControl,{variant:\"outlined\",size:\"small\",children:[/*#__PURE__*/_jsx(InputLabel,{id:\"demo-simple-select-outlined-label\",children:\"Link-follow-policy\"}),/*#__PURE__*/_jsxs(Select,{labelId:\"demo-simple-select-outlined-label\",id:\"demo-simple-select-outlined\",label:\"Link-follow-policy\",value:this.state.configuration.linkFollowPolicy,onChange:function onChange(event){_this2.handleInputValues(event,'linkFollowPolicy');},onBlur:this.handleSavingConfiguration,children:[/*#__PURE__*/_jsx(MenuItem,{value:linkFollowPolicyOptions[0],children:\"Follow all encountered links\"}),/*#__PURE__*/_jsx(MenuItem,{value:linkFollowPolicyOptions[1],children:\"Follow only the links with relevant keywords\"})]})]}),/*#__PURE__*/_jsx(TextField,{id:\"outlined-number\",label:\"Variance start time workday\",type:\"number\",placeholder:defaultValues.varStartTimeWorkday,variant:\"outlined\",size:\"small\",InputProps:{endAdornment:/*#__PURE__*/_jsx(InputAdornment,{position:\"end\",children:\"in minutes\"})},value:this.state.configuration.varStartTimeWorkday,onChange:function onChange(event){_this2.handleInputValues(event,'varStartTimeWorkday');},onBlur:this.handleSavingConfiguration}),/*#__PURE__*/_jsx(TextField,{id:\"outlined-number\",label:\"Variance end time workday\",type:\"number\",placeholder:defaultValues.varEndTimeWorkday,variant:\"outlined\",size:\"small\",InputProps:{endAdornment:/*#__PURE__*/_jsx(InputAdornment,{position:\"end\",children:\"in minutes\"})},value:this.state.configuration.varEndTimeWorkday,onChange:function onChange(event){_this2.handleInputValues(event,'varEndTimeWorkday');},onBlur:this.handleSavingConfiguration}),/*#__PURE__*/_jsx(TextField,{id:\"outlined-number\",label:\"Variance start time breaks\",type:\"number\",placeholder:defaultValues.varStartTimeBreaks,variant:\"outlined\",size:\"small\",InputProps:{endAdornment:/*#__PURE__*/_jsx(InputAdornment,{position:\"end\",children:\"in minutes\"})},value:this.state.configuration.varStartTimeBreaks,onChange:function onChange(event){_this2.handleInputValues(event,'varStartTimeBreaks');},onBlur:this.handleSavingConfiguration}),/*#__PURE__*/_jsx(TextField,{id:\"outlined-number\",label:\"Variance end time breaks\",type:\"number\",placeholder:defaultValues.varEndTimeBreaks,variant:\"outlined\",size:\"small\",InputProps:{endAdornment:/*#__PURE__*/_jsx(InputAdornment,{position:\"end\",children:\"in minutes\"})},value:this.state.configuration.varEndTimeBreaks,onChange:function onChange(event){_this2.handleInputValues(event,'varEndTimeBreaks');},onBlur:this.handleSavingConfiguration}),/*#__PURE__*/_jsx(TextField,{id:\"outlined-number\",label:\"Minimum reading speed (words per minute)\",type:\"number\",placeholder:defaultValues.readingSpeedRangeLower,variant:\"outlined\",size:\"small\",InputProps:{endAdornment:/*#__PURE__*/_jsx(InputAdornment,{position:\"end\",children:\"in minutes\"})},value:this.state.configuration.readingSpeedRangeLower,onChange:function onChange(event){_this2.handleInputValues(event,'readingSpeedRangeLower');},onBlur:this.handleSavingConfiguration}),/*#__PURE__*/_jsx(TextField,{id:\"outlined-number\",label:\"Maximum reading speed (words per minute)\",type:\"number\",placeholder:defaultValues.readingSpeedRangeUpper,variant:\"outlined\",size:\"small\",InputProps:{endAdornment:/*#__PURE__*/_jsx(InputAdornment,{position:\"end\",children:\"in minutes\"})},value:this.state.configuration.readingSpeedRangeUpper,onChange:function onChange(event){_this2.handleInputValues(event,'readingSpeedRangeUpper');},onBlur:this.handleSavingConfiguration}),/*#__PURE__*/_jsx(TextField,{id:\"outlined-number\",label:\"Minimum interrupt duration\",type:\"number\",placeholder:defaultValues.minInterruptionDuration,variant:\"outlined\",size:\"small\",InputProps:{endAdornment:/*#__PURE__*/_jsx(InputAdornment,{position:\"end\",children:\"in minutes\"})},value:this.state.configuration.minInterruptionDuration,onChange:function onChange(event){_this2.handleInputValues(event,'minInterruptionDuration');},onBlur:this.handleSavingConfiguration}),/*#__PURE__*/_jsx(TextField,{id:\"outlined-number\",label:\"Maximum interrupt duration\",type:\"number\",placeholder:defaultValues.maxInterruptionDuration,variant:\"outlined\",size:\"small\",InputProps:{endAdornment:/*#__PURE__*/_jsx(InputAdornment,{position:\"end\",children:\"in minutes\"})},value:this.state.configuration.maxInterruptionDuration,onChange:function onChange(event){_this2.handleInputValues(event,'maxInterruptionDuration');},onBlur:this.handleSavingConfiguration}),/*#__PURE__*/_jsx(TextField,{id:\"outlined-number\",label:\"Interval between interrupts\",type:\"number\",placeholder:defaultValues.interruptionInterval,variant:\"outlined\",size:\"small\",InputProps:{endAdornment:/*#__PURE__*/_jsx(InputAdornment,{position:\"end\",children:\"in minutes\"})},value:this.state.configuration.interruptionInterval,onChange:function onChange(event){_this2.handleInputValues(event,'interruptionInterval');},onBlur:this.handleSavingConfiguration}),/*#__PURE__*/_jsx(TextField,{id:\"outlined-number\",label:\"Interval between interrupts variance\",type:\"number\",placeholder:defaultValues.varInterruptionInterval,variant:\"outlined\",size:\"small\",InputProps:{endAdornment:/*#__PURE__*/_jsx(InputAdornment,{position:\"end\",children:\"in minutes\"})},value:this.state.configuration.varInterruptionInterval,onChange:function onChange(event){_this2.handleInputValues(event,'varInterruptionInterval');},onBlur:this.handleSavingConfiguration})]});}}]);return InputConfiguration;}(Component);export default InputConfiguration;","map":{"version":3,"sources":["/home/ubuntu/THREATcrawl/threatcrawl/src/start_screen/InputConfiguration.js"],"names":["React","Component","InputAdornment","TextField","InputLabel","FormControl","Select","Tooltip","MenuItem","IconButton","TimezoneSelector","defaultValues","FaRegEye","FaRegEyeSlash","FaRegQuestionCircle","InputConfiguration","props","state","configuration","frontPageURL","sectionPageURL","subsectionPageURL","threadPageURL","loginPageURL","username","password","maxThreadAge","maxThreadLength","timezone","linkFollowPolicy","varStartTimeWorkday","varEndTimeWorkday","varStartTimeBreaks","varEndTimeBreaks","torPath","readingSpeedRangeLower","readingSpeedRangeUpper","maxInterruptionDuration","minInterruptionDuration","interruptionInterval","varInterruptionInterval","passwordVisible","handleInputValues","bind","handleSavingConfiguration","handleTimezone","setState","event","element","newValue","target","value","length","saveConfiguration","linkFollowPolicyOptions","exampleLoginURL","exampleFrontPageURL","exampleSectionURL","exampleSubsectionURL","exampleThreadURL","endAdornment","togglePasswordVisibility"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { Component } from 'react';\nimport { InputAdornment, TextField, InputLabel, FormControl, Select, Tooltip, MenuItem, IconButton } from '@material-ui/core';\nimport TimezoneSelector from './components/TimezoneSelector';\nimport { defaultValues } from './DefaultValues';\nimport { FaRegEye, FaRegEyeSlash, FaRegQuestionCircle } from 'react-icons/fa';\n\n\nimport \"../styles/start.css\";\n\n/**\n * InputConfiguration is a class for the tab input configuration. \n * In this tab, several values can be input as part of the configuration. \n * \n * torPath is the path on the machine to the tor browser folder\n * frontPageURL is the URL for front page of the platform that the user would like to crawl. \n * sectionPageURL is the URL for section page of the platform that the user would like to crawl.\n * subsectionPageURL is the URL for subsection page of the platform that the user would like to crawl. (optional)\n * threadPageURL is the URL for thread page of the platform that the user would like to crawl.\n * loginPageURL is the URL for login page of the platform that the user would like to crawl. \n * username is the value of the username that the crawler can use to log in into the platform. \n * password is the value of the password that the crawler can use to log in into the platform. \n * maxThreadAge is the maximum age of a thread that the crawler will use to look into the threads. NOT USED\n * maxThreadLength is the maximum length of a thread that the crawler will use to look into the threads. NOT USED\n * timezone is the value of the timezone used which the crawler crawls during the defined schedule. \n * linkFollowPolicy is the policy to be used when encountering links on the platform.\n * varStartTimeWorkday is the variance for the start time of a workday. \n * varEndTimeWorkday is the variance for the end time of a workday. \n * varStartTimeBreaks is the variance for the start time of a break. \n * varEndTimeBreaks is the variance for the end time of a break. \n */\nclass InputConfiguration extends Component {\n\n    constructor(props) {\n        super(props);\n\n        // Set the initial state\n        this.state = {\n            configuration: {\n                frontPageURL: \"\",\n                sectionPageURL: \"\",\n                subsectionPageURL: \"\",\n                threadPageURL: \"\",\n                loginPageURL: \"\",\n                username: \"\",\n                password: \"\",\n                maxThreadAge: \"\",\n                maxThreadLength: \"\",\n                timezone: \"\",\n                linkFollowPolicy: \"\",\n                varStartTimeWorkday: \"\",\n                varEndTimeWorkday: \"\",\n                varStartTimeBreaks: \"\",\n                varEndTimeBreaks: \"\",\n                torPath: \"\",\n                readingSpeedRangeLower: \"\",\n                readingSpeedRangeUpper: \"\",\n                maxInterruptionDuration: \"\",\n                minInterruptionDuration: \"\",\n                interruptionInterval: \"\",\n                varInterruptionInterval: \"\"\n            },\n            passwordVisible: false\n        }\n\n        // Bind functions to this context\n        this.handleInputValues = this.handleInputValues.bind(this);\n        this.handleSavingConfiguration = this.handleSavingConfiguration.bind(this);\n        this.handleTimezone = this.handleTimezone.bind(this);\n    }\n\n    // Set the state to the configuration selected\n    componentDidMount() {\n        this.setState({ configuration: this.props.configuration });\n    }\n\n    /**\n     * Handle input value changes \n     * \n     * @param {*} event is the event for the new value \n     * @param {*} element is the name of the input that has changed\n     */\n    handleInputValues(event, element) {\n        // get new value \n        const newValue = event.target.value;\n\n        // If the value is larger than 0, change input according to what is typed \n        if (newValue.length >= 0) {\n\n            // Change the state of the element according to new value \n            this.setState((state) => ({\n                configuration: {\n                    ...state.configuration,\n                    [element]: newValue\n                }\n            }));\n        }\n    }\n\n    // Toggle whether the password is visible\n    togglePasswordVisibility() {\n        this.setState({\n            passwordVisible: !this.state.passwordVisible\n        })\n    }\n\n    // Handle selection of the timezone\n    handleTimezone(timezone) {\n        this.setState((state) => ({\n            configuration: {\n                ...state.configuration,\n                timezone: timezone\n            }\n        }));\n    }\n\n    // Send current configuration to TabScreen to save\n    handleSavingConfiguration() {\n        this.props.saveConfiguration(this.state.configuration);\n    }\n\n    render() {\n\n        // Define link follow policies\n        const linkFollowPolicyOptions = [\"all\", \"relevant\"];\n\n        return (\n            <div className=\"ConfigurationTab\">\n\n                {/* Tor Browser path */}\n                <TextField\n                    id=\"outlined-textarea\"\n                    label=\"Tor Browser path *\"\n                    placeholder={defaultValues.torPath}\n                    variant=\"outlined\"\n                    size=\"small\"\n                    value={this.state.configuration.torPath}\n                    onChange={(event) => {\n                        this.handleInputValues(event, 'torPath');\n                    }}\n                    onBlur={this.handleSavingConfiguration}\n                />\n\n                {/* URL log-in page */}\n                <TextField\n                    id=\"outlined-textarea\"\n                    label=\"URL log-in page *\"\n                    placeholder={defaultValues.exampleLoginURL}\n                    variant=\"outlined\"\n                    size=\"small\"\n                    value={this.state.configuration.loginPageURL}\n                    onChange={(event) => {\n                        this.handleInputValues(event, 'loginPageURL');\n                    }}\n                    onBlur={this.handleSavingConfiguration}\n                />\n\n                {/* URL front page */}\n                <TextField\n                    id=\"outlined-textarea\"\n                    label=\"URL front page *\"\n                    placeholder={defaultValues.exampleFrontPageURL}\n                    variant=\"outlined\"\n                    size=\"small\"\n                    value={this.state.configuration.frontPageURL}\n                    onChange={(event) => {\n                        this.handleInputValues(event, 'frontPageURL');\n                    }}\n                    onBlur={this.handleSavingConfiguration}\n                />\n\n                {/* URL section page */}\n                <TextField\n                    id=\"outlined-textarea\"\n                    label=\"URL section page *\"\n                    placeholder={defaultValues.exampleSectionURL}\n                    variant=\"outlined\"\n                    size=\"small\"\n                    value={this.state.configuration.sectionPageURL}\n                    onChange={(event) => {\n                        this.handleInputValues(event, 'sectionPageURL');\n                    }}\n                    onBlur={this.handleSavingConfiguration}\n                />\n\n                {/* URL subsection page */}\n                <TextField\n                    id=\"outlined-textarea\"\n                    label=\"URL subsection page\"\n                    placeholder={defaultValues.exampleSubsectionURL}\n                    variant=\"outlined\"\n                    size=\"small\"\n                    value={this.state.configuration.subsectionPageURL}\n                    onChange={(event) => {\n                        this.handleInputValues(event, 'subsectionPageURL');\n                    }}\n                    onBlur={this.handleSavingConfiguration}\n                />\n                <p>Please note: If the target website opens the last page of a thread when clicking on a thread title, provide a link for a thread at its second or third page, allowing to learn both the first page button and the next and previous page buttons.</p>\n                {/* URL thread page */}\n                <TextField\n                    id=\"outlined-textarea\"\n                    label=\"URL thread page *\"\n                    placeholder={defaultValues.exampleThreadURL}\n                    variant=\"outlined\"\n                    size=\"small\"\n                    value={this.state.configuration.threadPageURL}\n                    onChange={(event) => {\n                        this.handleInputValues(event, 'threadPageURL');\n                    }}\n                    onBlur={this.handleSavingConfiguration}\n                />\n\n                {/* Username */}\n                <TextField\n                    id=\"outlined-textarea\"\n                    label=\"Username\"\n                    placeholder={defaultValues.username}\n                    variant=\"outlined\"\n                    size=\"small\"\n                    value={this.state.configuration.username}\n                    onChange={(event) => {\n                        this.handleInputValues(event, 'username');\n                    }}\n                    onBlur={this.handleSavingConfiguration}\n                />\n\n                {/* Password */}\n                <TextField\n                    id=\"outlined-textarea\"\n                    label=\"Password\"\n                    type={this.state.passwordVisible ? \"text\" : \"password\"}\n                    placeholder={defaultValues.password}\n                    InputProps={{\n                        endAdornment:\n                            <InputAdornment position=\"end\" onClick={this.togglePasswordVisibility.bind(this)}>\n                                {this.state.passwordVisible ? <FaRegEyeSlash /> : <FaRegEye />}\n                            </InputAdornment>\n                    }}\n                    variant=\"outlined\"\n                    size=\"small\"\n                    value={this.state.configuration.password}\n                    onChange={(event) => {\n                        this.handleInputValues(event, 'password');\n                    }}\n                    onBlur={this.handleSavingConfiguration}\n                />\n\n                {/* Thread age */}\n                {/* <TextField\n                        id=\"outlined-number\"\n                        label=\"Maximum thread age\"\n                        type=\"number\"\n                        placeholder={defaultValues.maxThreadAge}\n                        InputProps={{\n                            endAdornment:\n                                <InputAdornment position=\"end\">\n                                    in years\n                                </InputAdornment>\n                        }}\n                        variant=\"outlined\"\n                        size=\"small\"\n                        value={this.state.configuration.maxThreadAge}\n                        onChange={(event) => {\n                            this.handleInputValues(event, 'maxThreadAge');\n                        }}\n                        onBlur={this.handleSavingConfiguration}\n                    /> */}\n\n                {/* Thread length */}\n                {/* <TextField\n                        id=\"outlined-number\"\n                        label=\"Maximum thread length\"\n                        type=\"number\"\n                        placeholder={defaultValues.maxThreadLength}\n                        variant=\"outlined\"\n                        size=\"small\"\n                        value={this.state.configuration.maxThreadLength}\n                        onChange={(event) => {\n                            this.handleInputValues(event, 'maxThreadLength');\n                        }}\n                        onBlur={this.handleSavingConfiguration}\n                    /> */}\n\n                {/* TimeZone spinner */}\n                <TimezoneSelector\n                    timezone={this.state.configuration.timezone}\n                    onChange={this.handleTimezone}\n                    onBlur={this.handleSavingConfiguration}\n                />\n\n                {/* Link-follow-policy */}\n                <FormControl\n                    variant=\"outlined\"\n                    size=\"small\"\n                >\n                    <InputLabel id=\"demo-simple-select-outlined-label\">Link-follow-policy</InputLabel>\n                    <Select\n                        labelId=\"demo-simple-select-outlined-label\"\n                        id=\"demo-simple-select-outlined\"\n                        label=\"Link-follow-policy\"\n                        value={this.state.configuration.linkFollowPolicy}\n                        onChange={(event) => {\n                            this.handleInputValues(event, 'linkFollowPolicy');\n                        }} \n                        onBlur={this.handleSavingConfiguration}   \n                        >\n                        <MenuItem value={linkFollowPolicyOptions[0]}>Follow all encountered links</MenuItem>\n                        <MenuItem value={linkFollowPolicyOptions[1]}>Follow only the links with relevant keywords</MenuItem>\n                    </Select>\n                </FormControl>\n\n                {/* Variance start time workday */}\n                <TextField\n                    id=\"outlined-number\"\n                    label=\"Variance start time workday\"\n                    type=\"number\"\n                    placeholder={defaultValues.varStartTimeWorkday}\n                    variant=\"outlined\"\n                    size=\"small\"\n                    InputProps={{\n                        endAdornment:\n                            <InputAdornment position=\"end\">\n                                in minutes\n                            </InputAdornment>\n                    }}\n                    value={this.state.configuration.varStartTimeWorkday}\n                    onChange={(event) => {\n                        this.handleInputValues(event, 'varStartTimeWorkday');\n                    }}\n                    onBlur={this.handleSavingConfiguration}\n                />\n\n                {/* Variance end time workday */}\n                <TextField\n                    id=\"outlined-number\"\n                    label=\"Variance end time workday\"\n                    type=\"number\"\n                    placeholder={defaultValues.varEndTimeWorkday}\n                    variant=\"outlined\"\n                    size=\"small\"\n                    InputProps={{\n                        endAdornment:\n                            <InputAdornment position=\"end\">\n                                in minutes\n                            </InputAdornment>\n                    }}\n                    value={this.state.configuration.varEndTimeWorkday}\n                    onChange={(event) => {\n                        this.handleInputValues(event, 'varEndTimeWorkday');\n                    }}\n                    onBlur={this.handleSavingConfiguration}\n                />\n\n                {/* Variance start time breaks */}\n                <TextField\n                    id=\"outlined-number\"\n                    label=\"Variance start time breaks\"\n                    type=\"number\"\n                    placeholder={defaultValues.varStartTimeBreaks}\n                    variant=\"outlined\"\n                    size=\"small\"\n                    InputProps={{\n                        endAdornment:\n                            <InputAdornment position=\"end\">\n                                in minutes\n                            </InputAdornment>\n                    }}\n                    value={this.state.configuration.varStartTimeBreaks}\n                    onChange={(event) => {\n                        this.handleInputValues(event, 'varStartTimeBreaks');\n                    }}\n                    onBlur={this.handleSavingConfiguration}\n                />\n\n                {/* Variance end time breaks */}\n                <TextField\n                    id=\"outlined-number\"\n                    label=\"Variance end time breaks\"\n                    type=\"number\"\n                    placeholder={defaultValues.varEndTimeBreaks}\n                    variant=\"outlined\"\n                    size=\"small\"\n                    InputProps={{\n                        endAdornment:\n                            <InputAdornment position=\"end\">\n                                in minutes\n                            </InputAdornment>\n                    }}\n                    value={this.state.configuration.varEndTimeBreaks}\n                    onChange={(event) => {\n                        this.handleInputValues(event, 'varEndTimeBreaks');\n                    }}\n                    onBlur={this.handleSavingConfiguration}\n                />\n\n                {/* Reading speed range lower */}\n                <TextField\n                    id=\"outlined-number\"\n                    label=\"Minimum reading speed (words per minute)\"\n                    type=\"number\"\n                    placeholder={defaultValues.readingSpeedRangeLower}\n                    variant=\"outlined\"\n                    size=\"small\"\n                    InputProps={{\n                        endAdornment:\n                            <InputAdornment position=\"end\">\n                                in minutes\n                            </InputAdornment>\n                    }}\n                    value={this.state.configuration.readingSpeedRangeLower}\n                    onChange={(event) => {\n                        this.handleInputValues(event, 'readingSpeedRangeLower');\n                    }}\n                    onBlur={this.handleSavingConfiguration}\n                />\n\n                {/* Reading speed range upper */}\n                <TextField\n                    id=\"outlined-number\"\n                    label=\"Maximum reading speed (words per minute)\"\n                    type=\"number\"\n                    placeholder={defaultValues.readingSpeedRangeUpper}\n                    variant=\"outlined\"\n                    size=\"small\"\n                    InputProps={{\n                        endAdornment:\n                            <InputAdornment position=\"end\">\n                                in minutes\n                            </InputAdornment>\n                    }}\n                    value={this.state.configuration.readingSpeedRangeUpper}\n                    onChange={(event) => {\n                        this.handleInputValues(event, 'readingSpeedRangeUpper');\n                    }}\n                    onBlur={this.handleSavingConfiguration}\n                />\n\n                {/* Minimum interrupt duration */}\n                <TextField\n                    id=\"outlined-number\"\n                    label=\"Minimum interrupt duration\"\n                    type=\"number\"\n                    placeholder={defaultValues.minInterruptionDuration}\n                    variant=\"outlined\"\n                    size=\"small\"\n                    InputProps={{\n                        endAdornment:\n                            <InputAdornment position=\"end\">\n                                in minutes\n                            </InputAdornment>\n                    }}\n                    value={this.state.configuration.minInterruptionDuration}\n                    onChange={(event) => {\n                        this.handleInputValues(event, 'minInterruptionDuration');\n                    }}\n                    onBlur={this.handleSavingConfiguration}\n                />\n\n                {/* Reading speed range upper */}\n                <TextField\n                    id=\"outlined-number\"\n                    label=\"Maximum interrupt duration\"\n                    type=\"number\"\n                    placeholder={defaultValues.maxInterruptionDuration}\n                    variant=\"outlined\"\n                    size=\"small\"\n                    InputProps={{\n                        endAdornment:\n                            <InputAdornment position=\"end\">\n                                in minutes\n                            </InputAdornment>\n                    }}\n                    value={this.state.configuration.maxInterruptionDuration}\n                    onChange={(event) => {\n                        this.handleInputValues(event, 'maxInterruptionDuration');\n                    }}\n                    onBlur={this.handleSavingConfiguration}\n                />\n\n                {/* Interrupt interval */}\n                <TextField\n                    id=\"outlined-number\"\n                    label=\"Interval between interrupts\"\n                    type=\"number\"\n                    placeholder={defaultValues.interruptionInterval}\n                    variant=\"outlined\"\n                    size=\"small\"\n                    InputProps={{\n                        endAdornment:\n                            <InputAdornment position=\"end\">\n                                in minutes\n                            </InputAdornment>\n                    }}\n                    value={this.state.configuration.interruptionInterval}\n                    onChange={(event) => {\n                        this.handleInputValues(event, 'interruptionInterval');\n                    }}\n                    onBlur={this.handleSavingConfiguration}\n                />\n\n                {/* Variance interrupt interval */}\n                <TextField\n                    id=\"outlined-number\"\n                    label=\"Interval between interrupts variance\"\n                    type=\"number\"\n                    placeholder={defaultValues.varInterruptionInterval}\n                    variant=\"outlined\"\n                    size=\"small\"\n                    InputProps={{\n                        endAdornment:\n                            <InputAdornment position=\"end\">\n                                in minutes\n                            </InputAdornment>\n                    }}\n                    value={this.state.configuration.varInterruptionInterval}\n                    onChange={(event) => {\n                        this.handleInputValues(event, 'varInterruptionInterval');\n                    }}\n                    onBlur={this.handleSavingConfiguration}\n                />\n            </div>\n        );\n    }\n}\n\nexport default InputConfiguration;"]},"metadata":{},"sourceType":"module"}