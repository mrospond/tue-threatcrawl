{"ast":null,"code":"import _assertThisInitialized from\"/home/ubuntu/THREATcrawl/threatcrawl/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";import _classCallCheck from\"/home/ubuntu/THREATcrawl/threatcrawl/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _createClass from\"/home/ubuntu/THREATcrawl/threatcrawl/node_modules/@babel/runtime/helpers/esm/createClass.js\";import _inherits from\"/home/ubuntu/THREATcrawl/threatcrawl/node_modules/@babel/runtime/helpers/esm/inherits.js\";import _createSuper from\"/home/ubuntu/THREATcrawl/threatcrawl/node_modules/@babel/runtime/helpers/esm/createSuper.js\";import*as React from'react';import{Component,Fragment}from'react';import{Button,Select,MenuItem,FormControl,InputLabel}from'@material-ui/core';import WeekCalendar from'react-week-calendar';import{v4 as uuidv4}from'uuid';// import 'react-week-calendar/dist/style.css';\nimport\"../styles/start.css\";import\"../styles/schedule.css\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var moment=require('moment');// Make sure some the schedule is set to start on monday\nmoment.updateLocale(\"en\",{week:{dow:1// First day of week is Monday\n}});/**\n * Schedule is a class for the tab schedule. \n * In this tab, the whole schedule can be input. \n * \n * A schedule is a 7-days schedule with workdays and breaks. \n * \n * A workday is the time in which a crawler will be crawling. \n * A break is the time in which a crawler has a break from crawling. \n */var Schedule=/*#__PURE__*/function(_Component){_inherits(Schedule,_Component);var _super=_createSuper(Schedule);function Schedule(){var _this;_classCallCheck(this,Schedule);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.handleEventRemove=function(interval){var remainingIntervals=_this.schedule.filter(function(element){return element.id!==interval.id;});_this.setSchedule(remainingIntervals);};_this.handleEventUpdate=function(interval){var updatedIntervals=_this.schedule.map(function(element){return interval.id===element.id?interval:element;});_this.setSchedule(updatedIntervals);};_this.handleSelect=function(newIntervals){newIntervals.forEach(function(interval){return interval['id']=uuidv4();});_this.setSchedule(_this.schedule.concat(newIntervals));};return _this;}_createClass(Schedule,[{key:\"schedule\",get:// Getter for the schedule\nfunction get(){return this.props.schedule;}/**\n     * This function is the way to update the schedule.\n     * @param {Array} schedule The (updated) list of intervals\n     */},{key:\"setSchedule\",value:function setSchedule(schedule){this.props.saveConfiguration(schedule);}/**\n     * Handle removing an interval from schedule \n     */},{key:\"render\",value:function render(){return/*#__PURE__*/_jsx(\"div\",{className:\"ScheduleTab\",children:/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(WeekCalendar,{modalComponent:Modal,className:\"Schedule\",firstDay:moment().startOf('week'),dayFormat:\"dddd\",scaleUnit:30,selectedIntervals:this.props.schedule,onIntervalSelect:this.handleSelect.bind(this),onIntervalUpdate:this.handleEventUpdate,onIntervalRemove:this.handleEventRemove.bind(this)})})});}}]);return Schedule;}(Component);// Custom modal for the event selection\nvar Modal=/*#__PURE__*/function(_Component2){_inherits(Modal,_Component2);var _super2=_createSuper(Modal);function Modal(props){var _this2;_classCallCheck(this,Modal);_this2=_super2.call(this,props);_this2.handleSave=function(){_this2.props.onSave({value:_this2.state.value});};_this2.handleCancel=function(){// Modal only closes when onRemove or onSave is called\n// so this is the simplest solution ¯\\_(ツ)_/¯\nif(_this2.isCreateModal){_this2.props.onRemove();}else{_this2.props.onSave({});}};_this2.handleDelete=function(){_this2.props.onRemove();};_this2.onTypeChange=function(event){_this2.setState({value:event.target.value});};_this2.renderOptions=function(){return _this2.props.scheduleTypes.map(function(type){return/*#__PURE__*/_jsx(MenuItem,{value:type,children:type},type);});};_this2.renderButtons=function(){return/*#__PURE__*/_jsxs(\"div\",{className:'flex-container justify-end',children:[_this2.isCreateModal?null:/*#__PURE__*/_jsx(Button,{onClick:_this2.handleDelete.bind(_assertThisInitialized(_this2)),variant:\"outlined\",className:'tc-button',children:\"Delete\"}),/*#__PURE__*/_jsx(Button,{onClick:_this2.handleCancel.bind(_assertThisInitialized(_this2)),variant:\"outlined\",className:'tc-button',children:\"Cancel\"}),/*#__PURE__*/_jsx(Button,{onClick:_this2.handleSave.bind(_assertThisInitialized(_this2)),variant:\"outlined\",className:'tc-button',children:\"Save\"})]});};if(_this2.props.scheduleTypes.length===0){throw new Error('There are 0 schedule types to choose from. There should be at least 1 option.');}_this2.state=_this2.createInitialState();return _this2;}_createClass(Modal,[{key:\"isCreateModal\",get:function get(){return this.props.actionType==='create';}},{key:\"isEditModal\",get:function get(){return this.props.actionType==='edit';}},{key:\"createInitialState\",value:function createInitialState(){return{value:this.props.value||this.props.scheduleTypes[0]};}},{key:\"render\",value:function render(){return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(FormControl,{children:[/*#__PURE__*/_jsx(InputLabel,{htmlFor:\"type-selector-label\",children:\"Type\"}),/*#__PURE__*/_jsx(Select,{id:\"type-selector\",labelId:\"type-selector-label\",variant:\"outlined\",value:this.state.value,onChange:this.onTypeChange.bind(this),children:this.renderOptions()})]}),this.renderButtons()]});}}]);return Modal;}(Component);Modal.defaultProps={scheduleTypes:['Workday','Break']};export default Schedule;","map":{"version":3,"sources":["/home/ubuntu/THREATcrawl/threatcrawl/src/start_screen/Schedule.js"],"names":["React","Component","Fragment","Button","Select","MenuItem","FormControl","InputLabel","WeekCalendar","v4","uuidv4","moment","require","updateLocale","week","dow","Schedule","handleEventRemove","interval","remainingIntervals","schedule","filter","element","id","setSchedule","handleEventUpdate","updatedIntervals","map","handleSelect","newIntervals","forEach","concat","props","saveConfiguration","Modal","startOf","bind","handleSave","onSave","value","state","handleCancel","isCreateModal","onRemove","handleDelete","onTypeChange","event","setState","target","renderOptions","scheduleTypes","type","renderButtons","length","Error","createInitialState","actionType","defaultProps"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { Component, Fragment } from 'react';\nimport {\n    Button,\n    Select,\n    MenuItem,\n    FormControl,\n    InputLabel\n} from '@material-ui/core'\nimport WeekCalendar from 'react-week-calendar';\nimport PropTypes from 'prop-types';\nimport { v4 as uuidv4 } from 'uuid';\n\n// import 'react-week-calendar/dist/style.css';\nimport \"../styles/start.css\";\nimport \"../styles/schedule.css\"; \n\nvar moment = require('moment');\n\n// Make sure some the schedule is set to start on monday\nmoment.updateLocale(\"en\", {\n    week: {\n        dow: 1, // First day of week is Monday\n    }\n});\n\n/**\n * Schedule is a class for the tab schedule. \n * In this tab, the whole schedule can be input. \n * \n * A schedule is a 7-days schedule with workdays and breaks. \n * \n * A workday is the time in which a crawler will be crawling. \n * A break is the time in which a crawler has a break from crawling. \n */\nclass Schedule extends Component {\n\n    // Getter for the schedule\n    get schedule() {\n        return this.props.schedule;\n    }\n\n    /**\n     * This function is the way to update the schedule.\n     * @param {Array} schedule The (updated) list of intervals\n     */\n    setSchedule(schedule) {\n        this.props.saveConfiguration(schedule);\n    }\n\n    /**\n     * Handle removing an interval from schedule \n     */\n    handleEventRemove = (interval) => {\n        const remainingIntervals = this.schedule.filter(element => element.id !== interval.id);\n\n        this.setSchedule(remainingIntervals);\n    }\n\n    /**\n     * Handle adjusting interval values \n     */\n    handleEventUpdate = (interval) => {\n        const updatedIntervals = this.schedule.map(element =>\n            interval.id === element.id\n                ? interval\n                : element\n        );\n\n        this.setSchedule(updatedIntervals);\n    }\n\n    /**\n     * Handle selecting an interval \n     */\n    handleSelect = (newIntervals) => {\n        newIntervals.forEach(interval => interval['id'] = uuidv4());\n\n        this.setSchedule(this.schedule.concat(newIntervals))\n    }\n\n    render() {\n        return (\n            <div className=\"ScheduleTab\">\n                <div>\n                    {/* Insert the schedule calendar */}\n                    <WeekCalendar\n                        modalComponent={Modal}\n                        className={\"Schedule\"}\n                        firstDay={moment().startOf('week')}\n                        dayFormat={\"dddd\"}\n                        scaleUnit={30}\n                        selectedIntervals={this.props.schedule}\n                        onIntervalSelect={this.handleSelect.bind(this)}\n                        onIntervalUpdate={this.handleEventUpdate}\n                        onIntervalRemove={this.handleEventRemove.bind(this)}\n                    >\n                    </WeekCalendar>\n                </div>\n            </div>\n        )\n    }\n}\n\n// Custom modal for the event selection\nclass Modal extends Component {\n    constructor(props) {\n        super(props);\n\n        if (this.props.scheduleTypes.length === 0) {\n            throw new Error('There are 0 schedule types to choose from. There should be at least 1 option.');\n        }\n\n        this.state = this.createInitialState();\n    }\n\n    get isCreateModal() {\n        return this.props.actionType === 'create';\n    }\n\n    get isEditModal() {\n        return this.props.actionType === 'edit';\n    }\n\n    createInitialState() {\n        return {\n            value: this.props.value || this.props.scheduleTypes[0]\n        };\n    }\n    \n    handleSave = () => {\n        this.props.onSave({\n            value: this.state.value\n        });\n    }\n\n    handleCancel = () => {\n        // Modal only closes when onRemove or onSave is called\n        // so this is the simplest solution ¯\\_(ツ)_/¯\n        if (this.isCreateModal) {\n            this.props.onRemove();\n        } else {\n            this.props.onSave({});\n        }\n    }\n\n    handleDelete = () => {\n        this.props.onRemove();\n    }\n\n    onTypeChange = event => {\n        this.setState({\n            value: event.target.value\n        });\n    }\n\n    renderOptions =\n        () => this.props.scheduleTypes.map(type => <MenuItem key={type} value={type}>{type}</MenuItem>)\n\n    renderButtons =\n        () => <div className={'flex-container justify-end'}>\n                    {this.isCreateModal ? null :\n                        <Button\n                            onClick={this.handleDelete.bind(this)}\n                            variant=\"outlined\"\n                            className={'tc-button'}\n                        >Delete</Button>\n                    }\n                    <Button\n                        onClick={this.handleCancel.bind(this)}\n                        variant=\"outlined\"\n                        className={'tc-button'}\n                    >Cancel</Button>\n                    <Button\n                        onClick={this.handleSave.bind(this)}\n                        variant=\"outlined\"\n                        className={'tc-button'}\n                    >Save</Button>\n                </div>\n\n    render() {\n        return (\n            <>\n                <FormControl>\n                <InputLabel htmlFor=\"type-selector-label\">Type</InputLabel>\n                <Select\n                    id=\"type-selector\"\n                    labelId=\"type-selector-label\"\n                    variant=\"outlined\"\n                    value={this.state.value}\n                    onChange={this.onTypeChange.bind(this)}\n                >\n                    {this.renderOptions()}\n                </Select>\n                </FormControl>\n                {this.renderButtons()}\n            </>\n        );\n    }\n}\n\nModal.propTypes = {\n    start: PropTypes.object.isRequired,\n    end: PropTypes.object.isRequired,\n    value: PropTypes.string,\n    scheduleTypes: PropTypes.array.isRequired,\n    onRemove: PropTypes.func.isRequired,\n    onSave: PropTypes.func.isRequired,\n    actionType: PropTypes.string\n};\n\nModal.defaultProps = {\n    scheduleTypes: ['Workday', 'Break']\n};\n\nexport default Schedule"]},"metadata":{},"sourceType":"module"}