{"ast":null,"code":"import _classCallCheck from\"/home/ubuntu/THREATcrawl/threatcrawl/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _createClass from\"/home/ubuntu/THREATcrawl/threatcrawl/node_modules/@babel/runtime/helpers/esm/createClass.js\";import _inherits from\"/home/ubuntu/THREATcrawl/threatcrawl/node_modules/@babel/runtime/helpers/esm/inherits.js\";import _createSuper from\"/home/ubuntu/THREATcrawl/threatcrawl/node_modules/@babel/runtime/helpers/esm/createSuper.js\";import*as React from'react';import{Component}from'react';import Snackbar from'@material-ui/core/Snackbar';import MuiAlert from'@material-ui/lab/Alert';import'../../styles/training.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var WebViewer=/*#__PURE__*/function(_Component){_inherits(WebViewer,_Component);var _super=_createSuper(WebViewer);function WebViewer(props){var _this;_classCallCheck(this,WebViewer);_this=_super.call(this,props);_this.handleClick=function(event){event.preventDefault();// Make sure a label is selected\nif(!_this.props.label&&_this.props.showAlert){_this.setState({showAlert:true});return;}// Call the handle click event from the props on the clicked element\ntry{if(typeof _this.props.handleClick==='function'){_this.props.handleClick(event.target);}}catch(error){console.log('An error occured during the execution of the user-provided handleClick method',error);}};_this.handleClose=function(event,reason){// If the user clicked away don't close the popup\nif(reason==='clickaway'){return;}// Otherwise do close the popup\n_this.setState({showAlert:false});};_this.state={showAlert:false};return _this;}_createClass(WebViewer,[{key:\"componentDidMount\",value:function componentDidMount(){// Add onclick listener for highlighting\nthis.attachOnClickListener();}/**\n     * Handle clicking on the webviewer\n     */},{key:\"attachOnClickListener\",value:/**\n     * Attach an onClick listener to the viewer\n     */function attachOnClickListener(){var _this2=this;document.getElementById('viewer').onload=function(){var iframe_document=document.getElementById(\"viewer\").contentDocument;iframe_document.body.addEventListener('click',_this2.handleClick);try{_this2.props.on_load();}catch(error){/** Do nothing, we don't care about any user-code errors here */}};}},{key:\"render\",value:function render(){return/*#__PURE__*/_jsxs(\"div\",{className:\"WebViewer\",children:[/*#__PURE__*/_jsx(\"iframe\",{id:\"viewer\",title:\"viewer\",src:this.props.page_url,sandbox:\"true\"}),/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(Snackbar,{open:this.state.showAlert,autoHideDuration:6000,anchorOrigin:{vertical:'top',horizontal:'center'},onClose:this.handleClose,children:/*#__PURE__*/_jsx(MuiAlert,{elevation:6,variant:\"filled\",severity:\"info\",onClose:this.handleClose,children:\"Please select a label first!\"})})})]});}}]);return WebViewer;}(Component);export default WebViewer;","map":{"version":3,"sources":["/home/ubuntu/THREATcrawl/threatcrawl/src/training_screen/components/WebViewer.js"],"names":["React","Component","Snackbar","MuiAlert","WebViewer","props","handleClick","event","preventDefault","label","showAlert","setState","target","error","console","log","handleClose","reason","state","attachOnClickListener","document","getElementById","onload","iframe_document","contentDocument","body","addEventListener","on_load","page_url","vertical","horizontal"],"mappings":"wdAAA,MAAO,GAAKA,CAAAA,KAAZ,KAAuB,OAAvB,CACA,OAASC,SAAT,KAA0B,OAA1B,CACA,MAAOC,CAAAA,QAAP,KAAqB,4BAArB,CACA,MAAOC,CAAAA,QAAP,KAAqB,wBAArB,CAEA,MAAO,2BAAP,C,gJAEMC,CAAAA,S,sGAEF,mBAAYC,KAAZ,CAAmB,2CACf,uBAAMA,KAAN,EADe,MAgBnBC,WAhBmB,CAgBL,SAAAC,KAAK,CAAI,CACnBA,KAAK,CAACC,cAAN,GAEA;AACA,GAAI,CAAE,MAAKH,KAAL,CAAWI,KAAb,EAAsB,MAAKJ,KAAL,CAAWK,SAArC,CAAgD,CAC5C,MAAKC,QAAL,CAAc,CACVD,SAAS,CAAE,IADD,CAAd,EAGA,OACH,CAED;AACA,GAAI,CACA,GAAI,MAAO,OAAKL,KAAL,CAAWC,WAAlB,GAAkC,UAAtC,CAAkD,CAC9C,MAAKD,KAAL,CAAWC,WAAX,CAAuBC,KAAK,CAACK,MAA7B,EACH,CACJ,CAAC,MAAOC,KAAP,CAAc,CACZC,OAAO,CAACC,GAAR,CAAY,+EAAZ,CAA6FF,KAA7F,EACH,CACJ,CAnCkB,OAwClBG,WAxCkB,CAwCJ,SAACT,KAAD,CAAQU,MAAR,CAAmB,CAC9B;AACA,GAAIA,MAAM,GAAK,WAAf,CAA4B,CACxB,OACH,CAED;AACA,MAAKN,QAAL,CAAc,CACVD,SAAS,CAAE,KADD,CAAd,EAGH,CAlDkB,CAGf,MAAKQ,KAAL,CAAa,CACTR,SAAS,CAAE,KADF,CAAb,CAHe,aAMlB,C,uDAED,4BAAoB,CAChB;AACA,KAAKS,qBAAL,GACH,CAED;AACJ;AACA,O,qCAqCI;AACJ;AACA,OACI,gCAAwB,iBACpBC,QAAQ,CAACC,cAAT,CAAwB,QAAxB,EAAkCC,MAAlC,CAA2C,UAAM,CAC7C,GAAMC,CAAAA,eAAe,CAAGH,QAAQ,CAACC,cAAT,CAAwB,QAAxB,EAAkCG,eAA1D,CAEAD,eAAe,CAACE,IAAhB,CAAqBC,gBAArB,CAAsC,OAAtC,CAA+C,MAAI,CAACpB,WAApD,EAEA,GAAI,CACA,MAAI,CAACD,KAAL,CAAWsB,OAAX,GACH,CAAC,MAAOd,KAAP,CAAc,CAAE,gEAAkE,CACvF,CARD,CASH,C,sBAED,iBAAS,CACL,mBACI,aAAK,SAAS,CAAC,WAAf,wBAEI,eAAQ,EAAE,CAAC,QAAX,CAAoB,KAAK,CAAC,QAA1B,CAAmC,GAAG,CAAE,KAAKR,KAAL,CAAWuB,QAAnD,CAA6D,OAAO,CAAC,MAArE,EAFJ,cAGI,sCAEI,KAAC,QAAD,EAAU,IAAI,CAAE,KAAKV,KAAL,CAAWR,SAA3B,CACI,gBAAgB,CAAE,IADtB,CAEI,YAAY,CAAE,CAAEmB,QAAQ,CAAE,KAAZ,CAAmBC,UAAU,CAAE,QAA/B,CAFlB,CAGI,OAAO,CAAE,KAAKd,WAHlB,uBAII,KAAC,QAAD,EAAU,SAAS,CAAE,CAArB,CAAwB,OAAO,CAAC,QAAhC,CAAyC,QAAQ,CAAC,MAAlD,CAAyD,OAAO,CAAE,KAAKA,WAAvE,0CAJJ,EAFJ,EAHJ,GADJ,CAiBH,C,uBAvFmBf,S,EA0FxB,cAAeG,CAAAA,SAAf","sourcesContent":["import * as React from 'react';\nimport { Component } from 'react';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\n\nimport '../../styles/training.css';\n\nclass WebViewer extends Component {\n\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            showAlert: false\n        }\n    }\n\n    componentDidMount() {\n        // Add onclick listener for highlighting\n        this.attachOnClickListener();\n    }\n\n    /**\n     * Handle clicking on the webviewer\n     */\n    handleClick = event => {\n        event.preventDefault();\n\n        // Make sure a label is selected\n        if (! this.props.label && this.props.showAlert) {\n            this.setState({\n                showAlert: true\n            });\n            return;\n        }\n\n        // Call the handle click event from the props on the clicked element\n        try {\n            if (typeof this.props.handleClick === 'function') {\n                this.props.handleClick(event.target);\n            }\n        } catch (error) {\n            console.log('An error occured during the execution of the user-provided handleClick method', error);\n        }\n    }\n\n    /**\n     * Handle closing the popup\n     */\n     handleClose = (event, reason) => {\n        // If the user clicked away don't close the popup\n        if (reason === 'clickaway') {\n            return;\n        }\n\n        // Otherwise do close the popup\n        this.setState({\n            showAlert: false\n        });\n    };\n\n    /**\n     * Attach an onClick listener to the viewer\n     */\n    attachOnClickListener() {\n        document.getElementById('viewer').onload = () => {\n            const iframe_document = document.getElementById(\"viewer\").contentDocument;\n\n            iframe_document.body.addEventListener('click', this.handleClick);\n\n            try {\n                this.props.on_load();\n            } catch (error) { /** Do nothing, we don't care about any user-code errors here */ }\n        };\n    }\n\n    render() {\n        return (\n            <div className=\"WebViewer\">\n                {/* Render the viewer using sandbox to disable all external communication */}\n                <iframe id=\"viewer\" title=\"viewer\" src={this.props.page_url} sandbox=\"true\"></iframe>\n                <>\n                    {/* The popup to render if needed */}\n                    <Snackbar open={this.state.showAlert}\n                        autoHideDuration={6000}\n                        anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\n                        onClose={this.handleClose}>\n                        <MuiAlert elevation={6} variant=\"filled\" severity=\"info\" onClose={this.handleClose}>\n                            Please select a label first!\n                        </MuiAlert>\n                    </Snackbar>\n                </>\n            </div>\n        );\n    }\n}\n\nexport default WebViewer;"]},"metadata":{},"sourceType":"module"}