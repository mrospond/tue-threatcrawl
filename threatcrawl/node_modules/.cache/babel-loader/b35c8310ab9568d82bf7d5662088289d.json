{"ast":null,"code":"import _slicedToArray from\"/home/ubuntu/THREATcrawl/threatcrawl/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{Button,Paper,TextField}from'@material-ui/core';import*as React from'react';import'../../styles/start.css';/**\n * KeywordColumn is a function that handles a column for keywords. \n * \n * In this function, a column is created for a list of keywords. \n * This list is either for relevant or blacklisted keywords. \n */import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function KeywordColumn(props){// Declares a new state variable\nvar _React$useState=React.useState(''),_React$useState2=_slicedToArray(_React$useState,2),currentKeyword=_React$useState2[0],setCurrentKeyword=_React$useState2[1];// Handles the change when a keyword has been input  \nvar handleChange=function handleChange(event){setCurrentKeyword(event.target.value);};// Adds the new keyword to the list of keywords\nvar addKeyword=function addKeyword(){props.addKeyword(currentKeyword);setCurrentKeyword(\"\");};return/*#__PURE__*/ (// Insert column for adding keywords\n_jsx(\"div\",{className:\"KeywordColumn\",children:/*#__PURE__*/_jsxs(Paper,{className:\"KeywordPaper\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"KeywordTitle\",children:props.name}),props.keywordsList.map(function(keyword){return/*#__PURE__*/_jsx(\"p\",{children:keyword});}),/*#__PURE__*/_jsxs(\"div\",{className:\"KeywordInputSubmission\",children:[/*#__PURE__*/_jsx(TextField,{id:\"outlined-textarea\",label:\"Enter keyword\",value:currentKeyword,onChange:handleChange,onKeyPress:function onKeyPress(event){if(event.code===\"Enter\"){addKeyword();}},className:\"KeywordInputField\"}),/*#__PURE__*/_jsx(Button,{id:\"keyword-button\",onClick:addKeyword,className:\"KeywordInputButton\",children:\"Add keyword\"})]}),/*#__PURE__*/_jsx(Button,{id:\"clear-button\",onClick:props.clear,className:\"KeywordInputButton clear\",children:\"Clear\"})]})}));}","map":{"version":3,"sources":["/home/ubuntu/THREATcrawl/threatcrawl/src/start_screen/components/KeywordColumn.js"],"names":["Button","Paper","TextField","React","KeywordColumn","props","useState","currentKeyword","setCurrentKeyword","handleChange","event","target","value","addKeyword","name","keywordsList","map","keyword","code","clear"],"mappings":"0HAAA,OAASA,MAAT,CAAiBC,KAAjB,CAAwBC,SAAxB,KAAyC,mBAAzC,CACA,MAAO,GAAKC,CAAAA,KAAZ,KAAuB,OAAvB,CAEA,MAAO,wBAAP,CAEA;AACA;AACA;AACA;AACA;AACA,G,wFACA,cAAe,SAASC,CAAAA,aAAT,CAAuBC,KAAvB,CAA8B,CAEzC;AACA,oBAA4CF,KAAK,CAACG,QAAN,CAAe,EAAf,CAA5C,oDAAOC,cAAP,qBAAuBC,iBAAvB,qBAEA;AACA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,KAAD,CAAW,CAC5BF,iBAAiB,CAACE,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAjB,CACH,CAFD,CAIA;AACA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,EAAM,CACrBR,KAAK,CAACQ,UAAN,CAAiBN,cAAjB,EACAC,iBAAiB,CAAC,EAAD,CAAjB,CACH,CAHD,CAKA,oBAEI;AACA,YAAK,SAAS,CAAC,eAAf,uBACI,MAAC,KAAD,EAAO,SAAS,CAAC,cAAjB,wBAGI,WAAI,SAAS,CAAC,cAAd,UAA+BH,KAAK,CAACS,IAArC,EAHJ,CAMKT,KAAK,CAACU,YAAN,CAAmBC,GAAnB,CAAuB,SAACC,OAAD,qBACpB,mBAAIA,OAAJ,EADoB,EAAvB,CANL,cAWI,aAAK,SAAS,CAAC,wBAAf,wBACI,KAAC,SAAD,EACI,EAAE,CAAC,mBADP,CAEI,KAAK,CAAC,eAFV,CAGI,KAAK,CAAEV,cAHX,CAII,QAAQ,CAAEE,YAJd,CAKI,UAAU,CAAE,oBAACC,KAAD,CAAW,CACnB,GAAIA,KAAK,CAACQ,IAAN,GAAe,OAAnB,CAA4B,CACxBL,UAAU,GACb,CACJ,CATL,CAUI,SAAS,CAAC,mBAVd,EADJ,cAaI,KAAC,MAAD,EACI,EAAE,CAAC,gBADP,CAEI,OAAO,CAAEA,UAFb,CAGI,SAAS,CAAC,oBAHd,yBAbJ,GAXJ,cAiCI,KAAC,MAAD,EACI,EAAE,CAAC,cADP,CAEI,OAAO,CAAER,KAAK,CAACc,KAFnB,CAGI,SAAS,CAAC,0BAHd,mBAjCJ,GADJ,EAHJ,EA+CH","sourcesContent":["import { Button, Paper, TextField } from '@material-ui/core';\nimport * as React from 'react';\n\nimport '../../styles/start.css';\n\n/**\n * KeywordColumn is a function that handles a column for keywords. \n * \n * In this function, a column is created for a list of keywords. \n * This list is either for relevant or blacklisted keywords. \n */\nexport default function KeywordColumn(props) {\n\n    // Declares a new state variable\n    const [currentKeyword, setCurrentKeyword] = React.useState('');\n\n    // Handles the change when a keyword has been input  \n    const handleChange = (event) => {\n        setCurrentKeyword(event.target.value);\n    };\n\n    // Adds the new keyword to the list of keywords\n    const addKeyword = () => {\n        props.addKeyword(currentKeyword);\n        setCurrentKeyword(\"\");\n    }\n\n    return (\n\n        // Insert column for adding keywords\n        <div className=\"KeywordColumn\">\n            <Paper className=\"KeywordPaper\">\n\n                {/* Insert title for the keyword column */}\n                <h3 className=\"KeywordTitle\" >{props.name}</h3>\n\n                {/* Add the keywords that have already been submitted before */}\n                {props.keywordsList.map((keyword) =>\n                    <p>{keyword}</p>\n                )}\n\n                {/* Input for the currently typed keyword and a button to submit the keyword */}\n                <div className=\"KeywordInputSubmission\">\n                    <TextField\n                        id=\"outlined-textarea\"\n                        label=\"Enter keyword\"\n                        value={currentKeyword}\n                        onChange={handleChange}\n                        onKeyPress={(event) => {\n                            if (event.code === \"Enter\") {\n                                addKeyword();\n                            }\n                        }}\n                        className=\"KeywordInputField\"\n                    />\n                    <Button\n                        id=\"keyword-button\"\n                        onClick={addKeyword}\n                        className=\"KeywordInputButton\"\n                    >\n                        Add keyword\n                    </Button>\n                </div>\n                {/* Button to clear the list of keywords */}\n                <Button\n                    id=\"clear-button\"\n                    onClick={props.clear}\n                    className=\"KeywordInputButton clear\"\n                >\n                    Clear\n                </Button>\n            </Paper>\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}