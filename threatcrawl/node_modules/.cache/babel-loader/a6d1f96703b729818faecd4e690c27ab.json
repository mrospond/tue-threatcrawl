{"ast":null,"code":"import _classCallCheck from\"/home/ubuntu/THREATcrawl/threatcrawl/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _createClass from\"/home/ubuntu/THREATcrawl/threatcrawl/node_modules/@babel/runtime/helpers/esm/createClass.js\";import _inherits from\"/home/ubuntu/THREATcrawl/threatcrawl/node_modules/@babel/runtime/helpers/esm/inherits.js\";import _createSuper from\"/home/ubuntu/THREATcrawl/threatcrawl/node_modules/@babel/runtime/helpers/esm/createSuper.js\";import*as React from'react';import{Component}from'react';import\"../styles/start.css\";import KeywordColumn from'./components/KeywordColumn';/**\n * Keywords is a class that returns the tab screen for relevant and blacklisted keywords. \n */import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Keywords=/*#__PURE__*/function(_Component){_inherits(Keywords,_Component);var _super=_createSuper(Keywords);function Keywords(){_classCallCheck(this,Keywords);return _super.apply(this,arguments);}_createClass(Keywords,[{key:\"relevantKeywords\",get:// Getter for relevant keywords\nfunction get(){return this.props.keywords.relevantKeywords;}// Getter for blacklisted keywords\n},{key:\"blacklistedKeywords\",get:function get(){return this.props.keywords.blacklistedKeywords;}/**\n     * Updates the current keyword lists to the TabScreen\n     */},{key:\"updateKeywords\",value:function updateKeywords(relevantKeywords,blacklistedKeywords){this.props.saveConfiguration({relevantKeywords:relevantKeywords,blacklistedKeywords:blacklistedKeywords});}/**\n     * Adds the newly submitted relevant keyword to the list \n     */},{key:\"addRelevantKeyword\",value:function addRelevantKeyword(keyword){this.updateKeywords(this.relevantKeywords.concat([keyword]),this.blacklistedKeywords);}/**\n     * Adds the newly submitted blacklisted keyword to the list \n     */},{key:\"addBlacklistedKeyword\",value:function addBlacklistedKeyword(keyword){this.updateKeywords(this.relevantKeywords,this.blacklistedKeywords.concat([keyword]));}/**\n     * Clears the list of relevant keywords\n     */},{key:\"clearRelevantKeywords\",value:function clearRelevantKeywords(){this.updateKeywords([],this.blacklistedKeywords);}/**\n     * Clears the list of blacklisted keywords\n     */},{key:\"clearBlacklistedKeywords\",value:function clearBlacklistedKeywords(){this.updateKeywords(this.relevantKeywords,[]);}},{key:\"render\",value:function render(){return/*#__PURE__*/_jsx(\"div\",{className:\"KeywordsTab\",children:/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(KeywordColumn,{name:\"Relevant keywords\",keywordsList:this.relevantKeywords,addKeyword:this.addRelevantKeyword.bind(this),clear:this.clearRelevantKeywords.bind(this)}),/*#__PURE__*/_jsx(KeywordColumn,{name:\"Blacklisted keywords\",keywordsList:this.blacklistedKeywords,addKeyword:this.addBlacklistedKeyword.bind(this),clear:this.clearBlacklistedKeywords.bind(this)})]})});}}]);return Keywords;}(Component);// Define the props of this class\nexport default Keywords;","map":{"version":3,"sources":["/home/ubuntu/THREATcrawl/threatcrawl/src/start_screen/Keywords.js"],"names":["React","Component","KeywordColumn","Keywords","props","keywords","relevantKeywords","blacklistedKeywords","saveConfiguration","keyword","updateKeywords","concat","addRelevantKeyword","bind","clearRelevantKeywords","addBlacklistedKeyword","clearBlacklistedKeywords"],"mappings":"wdAAA,MAAO,GAAKA,CAAAA,KAAZ,KAAuB,OAAvB,CACA,OAASC,SAAT,KAA0B,OAA1B,CAGA,MAAO,qBAAP,CACA,MAAOC,CAAAA,aAAP,KAA0B,4BAA1B,CAEA;AACA;AACA,G,2FACMC,CAAAA,Q,+OAEF;AACA,cAAuB,CACnB,MAAO,MAAKC,KAAL,CAAWC,QAAX,CAAoBC,gBAA3B,CACH,CAED;iCACA,cAA0B,CACtB,MAAO,MAAKF,KAAL,CAAWC,QAAX,CAAoBE,mBAA3B,CACH,CAED;AACJ;AACA,O,8BACI,wBAAeD,gBAAf,CAAiCC,mBAAjC,CAAsD,CAClD,KAAKH,KAAL,CAAWI,iBAAX,CAA6B,CACzBF,gBAAgB,CAAhBA,gBADyB,CAEzBC,mBAAmB,CAAnBA,mBAFyB,CAA7B,EAIH,CAED;AACJ;AACA,O,kCACI,4BAAmBE,OAAnB,CAA4B,CACxB,KAAKC,cAAL,CACI,KAAKJ,gBAAL,CAAsBK,MAAtB,CAA6B,CAACF,OAAD,CAA7B,CADJ,CAEI,KAAKF,mBAFT,EAIH,CAED;AACJ;AACA,O,qCACI,+BAAsBE,OAAtB,CAA+B,CAC3B,KAAKC,cAAL,CACI,KAAKJ,gBADT,CAEI,KAAKC,mBAAL,CAAyBI,MAAzB,CAAgC,CAACF,OAAD,CAAhC,CAFJ,EAIH,CAED;AACJ;AACA,O,qCACI,gCAAwB,CACpB,KAAKC,cAAL,CACI,EADJ,CAEI,KAAKH,mBAFT,EAIH,CAED;AACJ;AACA,O,wCACI,mCAA2B,CACvB,KAAKG,cAAL,CACI,KAAKJ,gBADT,CAEI,EAFJ,EAIH,C,sBAED,iBAAS,CACL,mBACI,YAAK,SAAS,CAAC,aAAf,uBACI,oCAEI,KAAC,aAAD,EACI,IAAI,CAAC,mBADT,CAEI,YAAY,CAAE,KAAKA,gBAFvB,CAGI,UAAU,CAAE,KAAKM,kBAAL,CAAwBC,IAAxB,CAA6B,IAA7B,CAHhB,CAII,KAAK,CAAE,KAAKC,qBAAL,CAA2BD,IAA3B,CAAgC,IAAhC,CAJX,EAFJ,cAUI,KAAC,aAAD,EACI,IAAI,CAAC,sBADT,CAEI,YAAY,CAAE,KAAKN,mBAFvB,CAGI,UAAU,CAAE,KAAKQ,qBAAL,CAA2BF,IAA3B,CAAgC,IAAhC,CAHhB,CAII,KAAK,CAAE,KAAKG,wBAAL,CAA8BH,IAA9B,CAAmC,IAAnC,CAJX,EAVJ,GADJ,EADJ,CAqBH,C,sBApFkBZ,S,EAuFvB;AASA,cAAeE,CAAAA,QAAf","sourcesContent":["import * as React from 'react';\nimport { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport \"../styles/start.css\"\nimport KeywordColumn from './components/KeywordColumn';\n\n/**\n * Keywords is a class that returns the tab screen for relevant and blacklisted keywords. \n */\nclass Keywords extends Component {\n\n    // Getter for relevant keywords\n    get relevantKeywords() {\n        return this.props.keywords.relevantKeywords;\n    }\n\n    // Getter for blacklisted keywords\n    get blacklistedKeywords() {\n        return this.props.keywords.blacklistedKeywords;\n    }\n\n    /**\n     * Updates the current keyword lists to the TabScreen\n     */\n    updateKeywords(relevantKeywords, blacklistedKeywords) {\n        this.props.saveConfiguration({\n            relevantKeywords,\n            blacklistedKeywords\n        });\n    }\n\n    /**\n     * Adds the newly submitted relevant keyword to the list \n     */\n    addRelevantKeyword(keyword) {\n        this.updateKeywords(\n            this.relevantKeywords.concat([keyword]),\n            this.blacklistedKeywords\n        );\n    }\n\n    /**\n     * Adds the newly submitted blacklisted keyword to the list \n     */\n    addBlacklistedKeyword(keyword) {\n        this.updateKeywords(\n            this.relevantKeywords,\n            this.blacklistedKeywords.concat([keyword])\n        );\n    }\n\n    /**\n     * Clears the list of relevant keywords\n     */\n    clearRelevantKeywords() {\n        this.updateKeywords(\n            [],\n            this.blacklistedKeywords\n        );\n    }\n\n    /**\n     * Clears the list of blacklisted keywords\n     */\n    clearBlacklistedKeywords() {\n        this.updateKeywords(\n            this.relevantKeywords,\n            []\n        );\n    }\n\n    render() {\n        return (\n            <div className=\"KeywordsTab\">\n                <div>\n                    {/* Column for the relevant keywords */}\n                    <KeywordColumn\n                        name=\"Relevant keywords\"\n                        keywordsList={this.relevantKeywords}\n                        addKeyword={this.addRelevantKeyword.bind(this)}\n                        clear={this.clearRelevantKeywords.bind(this)}\n                    />\n\n                    {/* Column for the blacklisted keywords */}\n                    <KeywordColumn\n                        name=\"Blacklisted keywords\"\n                        keywordsList={this.blacklistedKeywords}\n                        addKeyword={this.addBlacklistedKeyword.bind(this)}\n                        clear={this.clearBlacklistedKeywords.bind(this)}\n                    />\n                </div>\n            </div>\n        )\n    }\n}\n\n// Define the props of this class\nKeywords.propTypes = {\n    keywords: PropTypes.shape({\n        relevantKeywords: PropTypes.array.isRequired,\n        blacklistedKeywords: PropTypes.array.isRequired\n    }).isRequired,\n    saveConfiguration: PropTypes.func.isRequired\n};\n\nexport default Keywords"]},"metadata":{},"sourceType":"module"}